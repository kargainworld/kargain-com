{
    "env": {
        "node": true,
        "commonjs": true,
        "browser": true,
        "es6": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:react-hooks/recommended"
    ],
    "globals": {
        "Atomics": "readonly",
        "SharedArrayBuffer": "readonly"
    },
    "parser": "@babel/eslint-parser",
    "parserOptions": {
        "sourceType": "module",
        "allowImportExportEverywhere": true,
        "ecmaVersion": 2018,
        "ecmaFeatures": {
            "jsx": true
        }
    },
    "plugins": [
        "@babel",
        "react",
        "react-hooks",
        "styled-components-a11y",
        "unused-imports"
    ],
    "rules": {
        "semi": ["error", "never"],
        "no-extra-semi": "error",
        "comma-dangle": ["error", {
            "arrays": "never",
            "objects": "never",
            "imports": "never",
            "exports": "never",
            "functions": "never"
        }],
        "no-console": 0,
        // Indent with 4 spaces
        "indent": [
            "error",
            4
        ],
        "template-curly-spacing": "warn",
        // Indent JSX with 4 spaces
        "react/jsx-indent": [
            "error",
            4
        ],
        // Indent props with 4 spaces
        "react/jsx-indent-props": [
            "error",
            4
        ],
        "react-hooks/rules-of-hooks": "error",
        // Checks rules of Hooks
        "react-hooks/exhaustive-deps": "warn",
        // Checks effect dependencies
        "react/no-unescaped-entities": [
            "error",
            {
                "forbid": [
                    ">",
                    "}"
                ]
            }
        ],
        "react/display-name": [
            "error",
            {
                "ignoreTranspilerName": false
            }
        ],
        "react/prop-types": 0,
        "no-unused-vars": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": [
            "warn",
            {
                "vars": "all",
                "varsIgnorePattern": "^_",
                "args": "after-used",
                "argsIgnorePattern": "^_"
            }
        ]
    }
}
